SaltStack 
  1. Một số tính năng quan trọng : 
     -Khả năng chịu lỗi 
     -Quản lý cấu hình có thể mở rộng
     -Mô hình thực thi song song 
     -Dễ cài đặt và ngôn ngữ bất khả thi 

   2. Tổng Quan
     -Salt dựa trên thư viện ZeroMQ
     -Được chia thành nhiều phần  : 
         + SaltMaster  : SaltMaster là daemon chính. SaltMaster được sử dụng để gửi các lệnh và cấu hình đến các Saltminions. Một bản gốc duy nhất có thể quản lý nhiều bản gốc.
         + SaltMinions : SaltMinion là daemon nô lệ. Một minion Salt nhận các lệnh và cấu hình từ SaltMaster.
         + Thực thi    : Các lệnh mô-đun và Adhoc được thực thi từ dòng lệnh chống lại một hoặc nhiều tay sai. Nó thực hiện Giám sát thời gian thực.
         + Công thức : Công thức được viết sẵn Salt States. Chúng có kết thúc mở như chính Salt States và có thể được sử dụng cho các tác vụ như cài đặt gói, định cấu hình và khởi động dịch vụ, thiết lập người dùng hoặc quyền và nhiều tác vụ phổ biến khác.
         +Grains     :Grains là một giao diện cung cấp thông tin cụ thể cho một minion
         +Trụ cột    : Trụ cột là một giao diện tạo và lưu trữ dữ liệu có độ nhạy cao dành riêng cho một tay sai cụ thể, chẳng hạn như khóa mật mã và mật khẩu. Nó lưu trữ dữ liệu trong một cặp khóa / giá trị và dữ liệu được quản lý theo cách tương tự như Salt State Tree.
         +Tệp đầu trang :Đối sánh các trạng thái của Salt và dữ liệu trụ cột với các tay sai của Salt.
         +Runners   : Nó là một mô-đun nằm bên trong SaltMaster và thực hiện các tác vụ như trạng thái công việc, trạng thái kết nối, đọc dữ liệu từ các API bên ngoài, truy vấn các minion muối được kết nối và hơn thế nữa.
         +Returners :Trả về dữ liệu từ Salt minion cho một hệ thống khác.
         +Lò phản ứng : Nó chịu trách nhiệm kích hoạt các phản ứng khi các sự kiện xảy ra trong môi trường SaltStack của bạn.
         +SaltCloud   : Salt Cloud cung cấp một giao diện mạnh mẽ để tương tác với các máy chủ đám mây.
         +SaltSSH     : Chạy lệnh Salt qua SSH trên hệ thống mà không cần sử dụng Salt minion
     3. Cài Đặt :
         Đầu tiên bạn truy cập quyền root hoặc dùng sudo :
           +sudo apt-get update 
           +sudo apt-get install salt-master -> cài master  máy chính
           +sudo apt-get install salt-minion  -> cài minion máy con
           +cấu hình chính :
              #interface: 0.0.0.0
               interface: <địa chỉ ip cục bộ > -> sau khi cấu hình master xong chúng ta khởi động lại :sudo service salt-master restart
           +Cấu hình Minion :
           #master: salt
           master: <địa chỉ ip cục bộ > ->sau khi cấu hình minion xong chúng ta khởi động lại :sudo service salt-minion restart
           +Quản lí khóa :
              Salt sử dụng Mã hóa AES :   salt-key -L
              hiện ra kết quả : Accepted Keys:
                                Denied Keys:
                                Unaccepted Keys:
                                <local system name>
                                 Rejected Keys:  
               --> chấp nhận tất cả các khóa : sudo salt-key -A 
           + Liệt kê các khóa salt :
                 salt-key -L
                 Tạo ra kết quả :
                 Accepted Keys:
                 <local system name>
                 Denied Keys:
                 Unaccepted Keys:
                 Rejected Keys:
           + gửi lệnh để kiểm tra kết quả :
              sudo salt '*' test.ping
           Chú ý : cài trên máy chưa thành công 
     
     4. Tạo môi trường : 
         +Đầu tiên bạn cài máy ảo
         +Cài đặt Vagrant: https://www.vagrantup.com/
              ->Chạy Vagrant :vagrant up
              ->Dừng Vagrant :vagrant halt
          +Tải môi trường demo :
             cd /cd/to/path
             git clone https://github.com/UtahDave/salt-vagrant-demo
          +Bắt đầu môi trường :
             cd /cd/to/path/salt-vagrant-demo
             vagrant up
              -> kết quả trả về :result 
        5. Hệ thống kiểm soát truy cập saltstack
            + Hệ thống ACL của nhà xuất bản 
            +Hệ thống bên ngoài 
            +Hê thống ngang hàng
            
          ##hống ACL :
            Khái Niệm : cho phép truy cập vào những người dùng không phải root để thực hiện các lệnh salt trên các minion 
            Cấu hình chính : 
               publisher_acl :
                  user1:
                   - .*
                   
                  user2:
                   -web*:
                     - test.*
                     -pkg.*
              -> user1: được phép thực thi bất cứ điều gì 
              -> user2: được phép sử dụng test và pkg nhưng chỉ trên web 
            ## Hệ thống bên ngoài :
                -Thực hiện các lệnh salt trên các minion cụ thể thông qua hệ thống ủy quyền bên ngoài như "PAM ,LDAP... "
                - Cấu hình :
                   external_auth:
                     pam:
                       user1:
                          - 'web*':
                             - test.*
                             - network.*
                       user2:
                           - .*
              -> user1 được phép thực thi các chức năng trong mô-đun thử nghiệm và mạng trên các tay sai phù hợp với mục tiêu web * .
              -> user2 được phép thực thi tất cả các chức năng     
            *Bất hệ thống xác thực bên ngoài :
                 SALT -A PAM WEB\* TEST.PING 
               ->  -a pam : kích hoạt xác thực bên ngoài PAM 
               -> để hạn chế  Salt Server hỏi xác thực thêm tùy chọn -T sẽ lưu vào bộ nhớ cache các chi tiết xác thực trong 12h 
                 salt -T -a pam web\* test.ping 
            ##Hệ thống ngang hàng 
             -Cho phép các minion thực thi các trình chạy từ chủ bằng cấu hình peer_run 
             - Cấu hình :
                 peer :
                   .*
                    - .*
              -> giao tiếp tất cả các tay sai nhưng nó chỉ được khuyến nghị cho những môi trường an toàn 
               -Để gán các minion cho các ID cụ thể:
                  peer -
                    .*domain.com:
                        - test.*
               -Cho phép các tay sai thực thi người chạy từ tệp chính bằng cách sử dụng tùy chọn peer_run trên tệp chính
                    
              peer_run:
                 .*:
                   - .*
              -Để gán tay sai cho một ID cụ thể, cấu hình cần được xác định như dưới đây:
                  peer_run:
                   .*domain.com:
                      - test.*
             -Các lệnh để thực thi : 
                  salt-call publish.publish \* test.ping -> sử dụng các tay sai lệnh salt-call
                  salt-call publish.runner manage.up     -> thực thi runner 
              
              
              
              
              
              
                  
           
